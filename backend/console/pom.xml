<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Maven模型版本 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 父项目配置 -->
    <parent>
        <groupId>io.higress.api</groupId>
        <artifactId>higress-admin-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <!-- 项目基本信息 -->
    <artifactId>higress-console</artifactId>
    <name>higress-console</name>
    <description>Console Project for Higress</description>

    <!-- 项目属性配置 -->
    <properties>
        <!-- Node.js版本 -->
        <nodejs.version>16.19.0</nodejs.version>
        <!-- SpringDoc OpenAPI Maven插件版本 -->
        <springdoc-openapi-maven-plugin.version>1.4</springdoc-openapi-maven-plugin.version>

        <!-- 应用构建版本 -->
        <app.build.version>2.1.0</app.build.version>
        <!-- 是否为开发版本 -->
        <app.build.dev>true</app.build.dev>
    </properties>

    <!-- 项目依赖配置 -->
    <dependencies>
        <!-- Higress管理SDK依赖 -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>higress-admin-sdk</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Spring Boot Web启动器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot AOP启动器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- Spring Boot验证启动器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- SpringDoc OpenAPI UI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
        </dependency>

        <!-- Google Guava工具库 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- Apache Commons Lang3工具库 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Apache Commons Collections4工具库 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>

        <!-- Lombok注解处理器 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Apache HttpClient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- Retrofit2 HTTP客户端 -->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
        </dependency>

        <!-- Retrofit2 Jackson转换器 -->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-jackson</artifactId>
        </dependency>

        <!-- Spring Boot测试启动器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- 构建配置 -->
    <build>
        <!-- 最终构建文件名 -->
        <finalName>higress-console</finalName>

        <!-- 插件配置 -->
        <plugins>
            <!-- Spring Boot Maven插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- 前端Maven插件，用于构建前端项目 -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <!-- 工作目录设置为前端项目目录 -->
                    <workingDirectory>../../frontend/</workingDirectory>
                </configuration>
                <executions>
                    <!-- 安装Node.js和npm -->
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v${nodejs.version}</nodeVersion>
                        </configuration>
                    </execution>

                    <!-- 执行npm install -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <!-- 更新浏览器兼容性数据库 -->
                    <execution>
                        <id>update caniuse db</id>
                        <goals>
                            <goal>npx</goal>
                        </goals>
                        <configuration>
                            <arguments>browserslist@latest --update-db</arguments>
                        </configuration>
                    </execution>

                    <!-- 执行npm build构建前端项目 -->
                    <execution>
                        <id>npm build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven资源插件，用于复制资源文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <!-- 复制前端构建产物到静态资源目录 -->
                    <execution>
                        <id>copy-resources-static</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/src/main/resources/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../../frontend/build</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- 复制并过滤属性文件 -->
                    <execution>
                        <id>copy-resources-properties</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>*.properties</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Git提交ID Maven插件，用于获取Git版本信息 -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <verbose>false</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
                    <failOnNoGitDirectory>true</failOnNoGitDirectory>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.commit.id$</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 构建配置文件 -->
    <profiles>
        <!-- API文档生成配置文件 -->
        <profile>
            <id>api-docs</id>
            <build>
                <plugins>
                    <!-- Spring Boot Maven插件，用于启动和停止应用以生成API文档 -->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>start</goal>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <jvmArguments>
                                        -Dspringdoc.api-docs.enabled=true
                                        -Dspringdoc.swagger-ui.enabled=true
                                    </jvmArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- SpringDoc OpenAPI Maven插件，用于生成OpenAPI文档 -->
                    <plugin>
                        <groupId>org.springdoc</groupId>
                        <artifactId>springdoc-openapi-maven-plugin</artifactId>
                        <version>${springdoc-openapi-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <apiDocsUrl>http://localhost:8080/v3/api-docs/Higress</apiDocsUrl>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
